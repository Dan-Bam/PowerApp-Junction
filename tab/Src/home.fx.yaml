"home As screen.'tabletLayout_Calendar_ver3.0'":

    RectMeetingBkg1 As rectangle:
        Height: =42
        Visible: =_calendarVisible
        Width: =Parent.Width - Self.X
        X: =422
        Y: =RectQuickActionBar1.Height
        ZIndex: =1

    RectQuickActionBar1 As rectangle:
        Height: =64
        Width: =Parent.Width
        ZIndex: =2

    LblAppName1 As label:
        Height: =64
        PaddingLeft: =0
        Text: ="캘린더"
        Width: =Parent.Width - Self.X * 2
        Wrap: =false
        X: =32
        ZIndex: =3

    LblResetToday1 As label:
        Align: =Align.Center
        Color: =iconCalendar1.Color
        FontWeight: =FontWeight.Bold
        Height: =iconCalendar1.Height
        PaddingTop: =12
        Size: =11
        Text: =DateDiff(Date(Year(Today()), Month(Today()), 1), Today(), Days) + 1
        Width: =iconCalendar1.Width
        X: =iconCalendar1.X
        Y: =iconCalendar1.Y
        ZIndex: =4

    iconCalendar1 As icon.CalendarBlank:
        Height: =40
        Icon: =Icon.CalendarBlank
        OnSelect: |-
            =/*resets calendar view and date selection to today*/
            Set(_dateSelected, Today());
            Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), Days));
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days))
        TabIndex: =0
        Tooltip: ="선택한 날짜를 오늘로 다시 설정"
        Width: =40
        X: =395 - Self.Width
        Y: =dropdownCalendarSelection1.Y
        ZIndex: =5

    dropdownCalendarSelection1 As dropdown:
        Default: =_myCalendar.DisplayName
        Items: =Office365Outlook.CalendarGetTables().value
        OnChange: =Select(dropdownCalendarSelection1)
        OnSelect: |-
            =/*retrieves calendar events for all days in current month view and selected calendar 
            _minDate and _maxDate act as markers to prevent duplicate data collection*/         
            If(IsBlank(_userDomain),         
            	UpdateContext({_showLoading: true});         
            	Set(_userDomain, Right(User().Email, Len(User().Email) - Find("@", User().Email)));         
            	Set(_dateSelected, Today());         
            	Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), Days));         
            	Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));         
            	Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days))         
            );         
            Set(_calendarVisible, false);         
            UpdateContext({_showLoading: true});         
            Set(_myCalendar, Self.Selected);         
            Set(_minDate, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));         
            Set(_maxDate, DateAdd(DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days), 40, Days));         
            ClearCollect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_minDate, UTC), Text(_maxDate, UTC)).value);         
            UpdateContext({_showLoading: false});         
            Set(_calendarVisible, true)
        Tooltip: ="일정 선택"
        Width: =307
        X: =32
        Y: =RectQuickActionBar1.Height + 24
        ZIndex: =6

    LblMonthSelected1 As label:
        Align: =Align.Center
        Height: =50
        Size: =18
        Text: =Text(_firstDayOfMonth, "mmmm yyyy")
        Visible: =_calendarVisible
        Width: =419
        Wrap: =false
        Y: =dropdownCalendarSelection1.Y + dropdownCalendarSelection1.Height + 40
        ZIndex: =7

    iconPrevMonth1 As icon.ChevronLeft:
        Height: =50
        Icon: =Icon.ChevronLeft
        OnSelect: |-
            =/*changes month view to previous month*/
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, Months));
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days));
            /*collects calendar events for all days in current month view. Updates _minDate to prevent duplicate data collection if user returns to this month view*/
            If(_minDate > _firstDayOfMonth, Set(_minDate, _firstDayOfMonth); Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_minDate, UTC), Text(_lastDayOfMonth, UTC)).value))
        PaddingBottom: =7
        PaddingLeft: =7
        PaddingRight: =7
        PaddingTop: =7
        TabIndex: =0
        Tooltip: ="이전 달 보기"
        Visible: =_calendarVisible
        Width: =59
        Y: =LblMonthSelected1.Y
        ZIndex: =8

    iconNextMonth1 As icon.ChevronRight:
        Height: =50
        Icon: =Icon.ChevronRight
        OnSelect: |-
            =/*changes month view to next month*/
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, Months));
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));
            /*collects calendar events for all days in current month view. Updates _maxDate to prevent duplicate data collection if user returns to this month view*/
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days));
            If(_lastDayOfMonth > _maxDate, Set(_maxDate, _lastDayOfMonth); Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_firstDayOfMonth, UTC), Text(_maxDate, UTC)).value))
        PaddingBottom: =7
        PaddingLeft: =7
        PaddingRight: =7
        PaddingTop: =7
        TabIndex: =0
        Tooltip: ="다음 달 보기"
        Visible: =_calendarVisible
        Width: =59
        X: =419 - Self.Width
        Y: =LblMonthSelected1.Y
        ZIndex: =9

    WeekdayGallery1 As gallery.WeekdayGallery:
        AccessibleLabel: ="요일"
        Height: =45
        Items: =Calendar.WeekdaysShort()
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =60
        Visible: =_calendarVisible
        Width: =420
        Y: =LblMonthSelected1.Y + LblMonthSelected1.Height + 10
        ZIndex: =10

        Title1 As label:
            Align: =Align.Center
            Height: =WeekdayGallery1.TemplateHeight
            OnSelect: =Select(Parent)
            Size: =17 * WeekdayGallery1.TemplateWidth / 77
            Text: =ThisItem.Value
            VerticalAlign: =Middle
            Width: =WeekdayGallery1.TemplateWidth
            Wrap: =false
            X: =WeekdayGallery1.TemplateWidth / 2 - Self.Width / 2
            Y: =WeekdayGallery1.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =1

    MonthDayGallery1 As gallery.MonthDayGallery:
        AccessibleLabel: ="선택한 달의 날짜"
        Height: =425
        Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
        Layout: =Layout.Vertical
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =60
        Visible: =_calendarVisible
        Width: =420
        WrapCount: =7
        Y: =WeekdayGallery1.Y + WeekdayGallery1.Height
        ZIndex: =11

        Circle1 As circle:
            Height: =Self.Width
            OnSelect: =Select(Parent)
            Visible: |-
                =/*Visible if calendar events are found on this day*/               
                CountRows(Filter(MyCalendarEvents, DateValue(Text(Start)) = DateAdd(_firstDayInView,ThisItem.Value,Days))) > 0 && !Subcircle1.Visible && Title2.Visible
            Width: =6.5
            X: =MonthDayGallery1.TemplateWidth / 2 - Self.Width / 2
            Y: =MonthDayGallery1.TemplateHeight * (0.75)
            ZIndex: =1

        Subcircle1 As circle:
            Height: =3 * Title2.Size
            OnSelect: =Select(Parent)
            Visible: =And(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, Title2.Visible)
            Width: =Self.Height
            X: =MonthDayGallery1.TemplateWidth/2 - Self.Width/2
            Y: =MonthDayGallery1.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =2

        Title2 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =If(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(255, 255, 255, 1), DateAdd(_firstDayInView, ThisItem.Value) = Today(), RGBA(47, 41, 43, 1), LblMonthSelected1.Color)
            Fill: |-
                =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                If(
                    /*Date selected is today*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(0,0,0,0),
                    /*Today when it is not selected*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(Subcircle1.Fill, 0.67), 
                    /*The day is outside the range of the currently selected month*/
                    Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
            FocusedBorderColor: =Self.Color
            FocusedBorderThickness: =2
            Height: =MonthDayGallery1.TemplateHeight
            OnSelect: =Set(_dateSelected, DateAdd(_firstDayInView, ThisItem.Value, Days))
            Size: =17 * MonthDayGallery1.TemplateWidth / 91
            TabIndex: =0
            Text: =Day(DateAdd(_firstDayInView,ThisItem.Value,Days))
            VerticalAlign: =Middle
            Visible: |-
                =/*This item is in a row containing no days of the visible month. It is in the row after the row where the last day of the month occurs*/ 
                 !(DateAdd(_firstDayInView,ThisItem.Value,Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value,Days)) + 1 > _lastDayOfMonth)
            Width: =MonthDayGallery1.TemplateWidth
            Wrap: =false
            ZIndex: =3

    LblDateSelected1 As label:
        Height: =RectMeetingBkg1.Height
        Size: =13
        Text: =Text(_dateSelected, DateTimeFormat.LongDate)
        Visible: =_calendarVisible
        Width: =Parent.Width / 3 - 60
        Wrap: =false
        X: =451
        Y: =RectQuickActionBar1.Height
        ZIndex: =12

    RectCalendarSeparator1 As rectangle:
        Height: =Parent.Height - Self.Y
        Width: =2
        X: =420
        Y: =RectQuickActionBar1.Height
        ZIndex: =13

    Button6 As button:
        OnSelect: |-
            =Set(varUserCalendarId, LookUp(Office365Outlook.CalendarGetTablesV2().value, name="Calendar").id);
            /*retrieves calendar events for all days in current month view and selected calendar 
            _minDate and _maxDate act as markers to prevent duplicate data collection*/         
            If(IsBlank(_userDomain),         
            	UpdateContext({_showLoading: true});         
            	Set(_userDomain, Right(User().Email, Len(User().Email) - Find("@", User().Email)));         
            	Set(_dateSelected, Today());         
            	Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), Days));         
            	Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));         
            	Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days))         
            );         
            Set(_calendarVisible, false);         
            UpdateContext({_showLoading: true});         
            Set(_myCalendar, dropdownCalendarSelection1.Selected);         
            Set(_minDate, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));         
            Set(_maxDate, DateAdd(DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days), 40, Days));         
            ClearCollect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_minDate, UTC), Text(_maxDate, UTC)).value);         
            UpdateContext({_showLoading: false});         
            Set(_calendarVisible, true);
            Navigate(task)
        Text: ="단추"
        X: =701
        Y: =446
        ZIndex: =14

    Rectangle4_2 As rectangle:
        Fill: =RGBA(237, 241, 255, 1)
        Height: =75
        Width: =1366
        Y: =693
        ZIndex: =15

    Icon1_6 As icon.Draw:
        Icon: =Icon.Home
        OnSelect: =Navigate(home)
        Width: =35
        X: =658
        Y: =686
        ZIndex: =16

    Icon1_7 As icon.Draw:
        Height: =60
        Icon: =Icon.Edit
        Width: =35
        X: =178
        Y: =692
        ZIndex: =17

    Icon1_8 As icon.Draw:
        Icon: =Icon.ListWatchlistRemind
        OnSelect: =Navigate(task)
        Width: =35
        X: =1154
        Y: =686
        ZIndex: =18

    Label9_7 As label:
        Align: =Align.Center
        FontWeight: =FontWeight.Bold
        OnSelect: =Navigate(home)
        Size: =12
        Text: ="Home"
        X: =601
        Y: =728
        ZIndex: =19

    Label9_8 As label:
        Align: =Align.Center
        FontWeight: =FontWeight.Bold
        OnSelect: =Navigate(task)
        Size: =12
        Text: ="Task"
        X: =1097
        Y: =725
        ZIndex: =20

    Label9_9 As label:
        Align: =Align.Center
        FontWeight: =FontWeight.Bold
        Size: =12
        Text: ="Assign"
        X: =121
        Y: =725
        ZIndex: =21

